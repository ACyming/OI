 
#define kdown(VK_NONAME) ((GetAsyncKeyState(VK_NONAME) & 0x8000) ? n : 0)
using namespace std;
int main()
{
    int n;
    cin >> n;
    while (1) {
        if (kdown('Q'))
            cout << "草泥马 ";
        Sleep(n);
        if (kdown('W'))
            cout << "尼玛炸了 ";
        Sleep(n);
        if (kdown('E'))
            cout << "吃柠檬 ";
        Sleep(n);
        if (kdown('R'))
            cout << "cnm ";
        Sleep(n);
        if (kdown('T'))
            cout << "伞兵 ";
        Sleep(n);
        if (kdown('Y'))
            cout << "乐子 ";
        Sleep(n);
        if (kdown('U'))
            cout << "FUCK ";
        Sleep(n);
        if (kdown('I'))
            cout << "彬彬就是逊啦 ";
        Sleep(n);
        if (kdown('O'))
            cout << "未来大明星 ";
        Sleep(n);
        if (kdown('P'))
            cout << "草泥马 ";
        Sleep(n);
        if (kdown('A'))
            cout << "愣头青 ";
        Sleep(n);
        if (kdown('S'))
            cout << "去你妈 ";
        Sleep(n);
        if (kdown('D'))
            cout << "死全家 ";
        Sleep(n);
        if (kdown('F'))
            cout << "没父母 ";
        Sleep(n);
        if (kdown('G'))
            cout << "你家祖坟炸了 ";
        Sleep(n);
        if (kdown('H'))
            cout << "你炸！ ";
        Sleep(n);
        if (kdown('J'))
            cout << "智障 ";
        Sleep(n);
        if (kdown('K'))
            cout << "祝你全家健康 ";
        Sleep(n);
        if (kdown('L'))
            cout << "你最大 ";
        Sleep(n);
        if (kdown('Z'))
            cout << "你黑心肝 ";
        Sleep(n);
        if (kdown('X'))
            cout << "没良心 ";
        Sleep(n);
        if (kdown('C'))
            cout << "不要脸 ";
        Sleep(n);
        if (kdown('V'))
            cout << "没有格 ";
        Sleep(n);
        if (kdown('B'))
            cout << "不要用你无下限的智商，来挑战我忍耐的底线 ";
        Sleep(n);
        if (kdown('N'))
            cout << "dsb ";
        Sleep(n);
        if (kdown('M'))
            cout << "脸长的跟矿泉水瓶让人踹瘪了似的，我明明看你从泰国医院出来的，怎么还是这样。 ";
        Sleep(n);
    }
    return 0;
}
